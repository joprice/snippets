syntax enable     " enable syntax processing

function! Preserve(command)
  let search = @/
  let cursor_position = getpos('.')
  normal! H
  let window_position = getpos('.')
  call setpos('.', cursor_position)

  execute a:command

  let @/ = search
  call setpos('.', window_position)
  normal! zt
  call setpos('.', cursor_position)
endfunction

function! Indent()
  call Preserve('normal gg=G')
endfunction

autocmd BufWritePre *.c call Indent()
autocmd BufWritePre *.cpp call Indent()

"autocmd BufWritePre *.c :normal gg=G
"autocmd BufWritePre *.cpp :normal gg=G
"autocmd BufWritePre *.scala :normal gg=G
"

" assumes vundle was cloned locally with `git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim`
set nocompatible              " required by vundle
filetype off                  " required by vundle
set rtp+=~/.vim/bundle/Vundle.vim " set the runtime path to include Vundle and initialize
call vundle#begin()

Plugin 'cespare/vim-toml'
Plugin 'fatih/vim-go'
Plugin 'derekwyatt/vim-scala'
Plugin 'gmarik/Vundle.vim' " let Vundle manage Vundle, required
Plugin 'kien/ctrlp.vim'
Plugin 'sjl/gundo.vim'
Plugin 'majutsushi/tagbar'
Plugin 'Shougo/neocomplcache'
Plugin 'derekwyatt/vim-sbt'
Plugin 'kien/rainbow_parentheses.vim'
Plugin 'Townk/vim-autoclose'
Plugin 'scrooloose/nerdtree' 
Plugin 'gregsexton/gitv'
Plugin 'ekalinin/Dockerfile.vim'
Plugin 'guns/vim-clojure-static'
Plugin 'godlygeek/tabular'
Plugin 'plasticboy/vim-markdown'
Plugin 'rust-lang/rust.vim'
Plugin 'bitc/vim-hdevtools'
Plugin 'idris-hackers/idris-vim'
Plugin 'elzr/vim-json'
Plugin 'uarun/vim-protobuf'
Plugin 'keith/swift.vim'
Plugin 'm-kat/aws-vim.git'
Plugin 'raichoo/purescript-vim'

"Plugin 'scrooloose/syntastic'

"Plugin 'ensime/ensime-vim'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

set autoread
set tabstop=2     " number of visual spaces per TAB
set softtabstop=2 " number of spaces in tab when editing
set shiftwidth=2
set autoindent
set expandtab     " tabs are spaces
set number        " show line numbers
set showcmd       " show command in bottom bar
set cursorline    " highlight current line

set wildmode=longest,list,full " show autocomplete
set wildmenu " visual autocomplete for commands

set lazyredraw " redraw only when we necessary 

" searching
set ignorecase
set smartcase
set incsearch " search as characters are typed
set hlsearch " highlight search matches

set showmatch           " highlight matching braces

" let g:neocomplcache_enable_at_startup = 1

" autocomplete popup color
hi Pmenu ctermbg=8 ctermfg=7
hi PmenuSel ctermbg=7
hi PmenuSbar ctermbg=0

"TODO: limit to clj/lisp files
"au VimEnter * RainbowParenthesesToggle
"au Syntax * RainbowParenthesesLoadRound
"au Syntax * RainbowParenthesesLoadSquare
"au Syntax * RainbowParenthesesLoadBraces

autocmd FileType c,cpp,java,scala autocmd BufWritePre <buffer> :%s/\s\+$//e

"set␣listchars=eol:¬,tab:>·,trail:~,extends:>,precedes:<,space:␣¬
"set␣list¬

match ErrorMsg '\%>100v.\+'

let g:vim_markdown_folding_disabled=1

"set mouse=a
